


原先逻辑：
etc结算：把原始交易数据汇总->写入原始数据汇总表；海玲通过原始数据汇总表打包数据，然后与联网中心进行结算；
数据库： oracle 数据库； 用golang 操作 oracle数据库；

dev：与联网中心直接结算

现有逻辑：
数据库：mysql数据库；用golang xorm操作mysql数据库；

//线程1：[之前用的是oracle ，现在需要讨论一下mysql的建表和字段
原逻辑：
	从车道消费数据表[B_TXF_CHEDXFYSSJ]中一次查找100条未打包的数据，(5分钟或100条)，未打包数据的数据有标记；
按照联网交互的格式要求生成XML。  并按照 LZ77 方式打包；存入指定的文件夹中；并更新数据库打包标记；注意使用事务更新包号，打包时间。
【这部分需要修改】

//线程2：
从文件夹sendxml中 定期 扫描打包文件，
若有则读取，按照联网规范 发送至 联网中心的数据服务端口中；
发送成功后（收到联网中心的ok 应答） 将文件转移至另外文件夹sendsucceed；

【定时器：定期扫描文件夹，把扫描到的文件，读取并发送，发送成功后，把数据包转移到另文件夹，如果发送失败则重发】
【我方发送数据包，对面接收数据包 】
【对方发送应答包，我方将文件转移至另外文件夹sendsucceed；】

//线程3：
服务端监听端口，接收联网发送过来的数据包，并存储在指定文件夹；
【 服务端监听端口，接受数据包，把数据写成文件，放入指定文件夹  】

//线程4：
定期扫描接收联网的接收数据的文件夹，解压后分析包。
更新应答包状态、争议包状态、记账包状态、清分包状态、退费包状态；
【对压缩包解压并分析（  争议包等问题处理没有具体处理方案）】





